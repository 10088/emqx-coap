%%-*- mode: erlang -*-
%% emqx_coap config mapping

{mapping, "coap.port", "emqx_coap.port", [
  {datatype, integer}
]}.

{mapping, "coap.dtls_port", "emqx_coap.dtls_port", [
  {datatype, integer}
]}.

{mapping, "coap.keepalive", "emqx_coap.keepalive", [
  {default, "120s"},
  {datatype, {duration, s}}
]}.

{mapping, "coap.cacertfile", "emqx_coap.cacertfile", [
  {datatype, string}
]}.

{mapping, "coap.keyfile", "emqx_coap.keyfile", [
  {datatype, string}
]}.

{mapping, "coap.certfile", "emqx_coap.certfile", [
  {datatype, string}
]}.

{mapping, "coap.enable_stats", "emqx_coap.enable_stats", [
  {datatype, flag}
]}.

{mapping, "coap.dtls.ciphers", "emqx_coap.ciphers", [
  {datatype, string}
]}.

{translation, "emqx_coap.ciphers", fun(Conf) ->
    SplitFun = fun(undefined) -> undefined; (S) -> string:tokens(S, ",") end,
    DTLSCiphers = cuttlefish:conf_get("coap.dtls.ciphers", Conf, undefined),
    case DTLSCiphers of
        undefined ->
            cuttlefish:invalid("coap.dtls.ciphers is absent");
        _ ->
            SplitFun(DTLSCiphers)
    end
end}.

